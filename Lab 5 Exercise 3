abstract class Cake{
    String name;
    String[] topping, toppingOrder;
    double priceSmall, priceMedium, priceBig, totalPrice;
    int size, quantity;
    
    Cake(String n){
        name = n;
    }
    
    abstract void setCake(String[] top, double s, double m, double b);
    
    void orderCake(String[] order, int qty, int sz){
        toppingOrder = order;
        quantity = qty;
        size = sz;
    }
    
    double getSizePrice(){
        double sizePrice = 0.0;
        switch (size){
            case 1:
                sizePrice = priceSmall;
                break;
            case 2:
                sizePrice = priceMedium;
                break;
            case 3:
                sizePrice = priceBig;
                break;
        }
        return sizePrice;
    }
    
    double getTotalPrice(){
        totalPrice = getSizePrice() * quantity + (toppingOrder.length * 10);
        return totalPrice;
    }
    
    String getSize(){
        String Size = "null";
        switch (size){
            case 1:
                Size = "Small";
                break;
            case 2:
                Size = "Medium";
                break;
            case 3:
                Size = "Big";
                break;
        }
        return Size;
    }
    
    void printCake(){
        System.out.println("-----------------------------");
        System.out.println("\t\tCake Menu");
        System.out.println("-----------------------------");
        System.out.println(name + " Cake with avaiable toppings:");
        for (int i = 0; i < topping.length; i++){
            System.out.println((i+1) + ") " + topping[i]);
        }
        System.out.println("\nPrice:");
        System.out.println("[1] Small" + "\t: RM" + priceSmall);
        System.out.println("[2] Medium" + "\t: RM" + priceMedium);
        System.out.println("[3] Big" + "\t\t: RM" + priceBig);
    }
    
    void printOrder(){
        System.out.println("\nCake Order detail:");
        System.out.println("----------------------------------------");
        System.out.print("Topping" +"\t: ");
        for (int i = 0; i < toppingOrder.length; i++){
            System.out.print((i+1) + ") " + toppingOrder[i] + " ");
        }
        System.out.println("\nSize: " + "\t: " + getSize());
        System.out.println("----------------------------------------");
        System.out.println("Total Price: RM" + getTotalPrice());
    }
}

class BlackForest extends Cake{
    BlackForest(String n){
        super(n);
    }
    
    void setCake(String[] top, double s, double m, double b){
       topping = top;
       priceSmall = s;
       priceMedium = m;
       priceBig = b;
    }
}

public class TestCake1{
    public static void main(String args[]){
        Cake c = new BlackForest("BlackForest"); 
        //Initialize available selection of toppings
        //and price for small, medium and large 
        String[] topping = {"Chocolate", "Cherries", "Whipped Cream"}; 
        c.setCake(topping, 45.00, 65.00, 80.00); 
        c.printCake(); 
        //Initialize order, quantity and size
        String[] order = {"Chocolate", "Cherries"}; 
        c.orderCake(order, 1, 2); 
        c.printOrder(); 
    } 
}
